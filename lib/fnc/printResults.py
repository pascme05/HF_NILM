#######################################################################################################################
#######################################################################################################################
# Title: Baseline NILM Architecture
# Topic: Non-intrusive load monitoring utilising machine learning, pattern matching and source separation
# File: printResults
# Date: 23.10.2021
# Author: Dr. Pascal A. Schirmer
# Version: V.0.0
# Copyright: University of Hertfordshire, Hatfield UK
#######################################################################################################################
#######################################################################################################################


#######################################################################################################################
# Import external libs
#######################################################################################################################


#######################################################################################################################
# Function
#####################################################################################################################
def printResults(resultsApp, resultsAvg, setup_Data):
    ####################################################################################################################
    # Welcome Message
    ####################################################################################################################
    print("Ready!")
    print("Per device accuracies:")

    ####################################################################################################################
    # Calculations
    ####################################################################################################################
    print('----------------------')
    print('\t|          |    FINITE STATES   |          POWER ESTIMATION         |   PERCENT OF TOTAL  |')
    print('\t| item ID  | ACCURACY | F-SCORE | E-ACCURACY |   RMSE   |    MAE    |    EST    |  TRUTH  |')
    print('\t|----------|----------|---------|------------|----------|-----------|-----------|---------|')
    for i in range(0, setup_Data['numApp']):
        print('\t| %-8s |  %6.2f%% | %6.2f%% |  %6.2f%%   |  %6.2f%% |  %6.2f%%  |  %6.2f%%  | %6.2f%% |' % (
            (i + 1), resultsApp[i, 0] * 100, resultsApp[i, 1] * 100, resultsApp[i, 2] * 100, resultsApp[i, 3], resultsApp[i, 4],
            resultsApp[i, 5] * 100, resultsApp[i, 6] * 100))
        print('\t|----------|----------|---------|------------|----------|-----------|-----------|---------|')
    print('\t|----------|----------|---------|------------|----------|-----------|-----------|---------|')
    print('\t|    AVG   |  %6.2f%% | %6.2f%% |  %6.2f%%   |  %6.2f%% |  %6.2f%%  |  %6.2f%%  | %6.2f%% |' % (
        resultsAvg[0] * 100, resultsAvg[1] * 100, resultsAvg[2] * 100, resultsAvg[3], resultsAvg[4], resultsAvg[5] * 100, resultsAvg[6] * 100))
